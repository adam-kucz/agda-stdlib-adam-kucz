{-# OPTIONS --exact-split --safe --prop #-}
open import Universes
open import Relation.Binary.Definition

module Proposition.Sum.Property {R‚ÇÄ : BinRel ùí∞ X}{R‚ÇÅ : BinRel ùí± X} where

open import Proposition.Sum.Definition

open import Relation.Binary.Property

instance
  Reflexive‚àß :
    ‚¶É refl-R‚ÇÄ : Reflexive R‚ÇÄ ‚¶Ñ
    ‚¶É refl-R‚ÇÅ : Reflexive R‚ÇÅ ‚¶Ñ
    ‚Üí --------------------------
    Reflexive (Œª x y ‚Üí R‚ÇÄ x y ‚àß R‚ÇÅ x y)
  Symmetric‚àß :
    ‚¶É refl-R‚ÇÄ : Symmetric R‚ÇÄ ‚¶Ñ
    ‚¶É refl-R‚ÇÅ : Symmetric R‚ÇÅ ‚¶Ñ
    ‚Üí --------------------------
    Symmetric (Œª x y ‚Üí R‚ÇÄ x y ‚àß R‚ÇÅ x y)
  Transitive‚àß :
    ‚¶É refl-R‚ÇÄ : Transitive R‚ÇÄ ‚¶Ñ
    ‚¶É refl-R‚ÇÅ : Transitive R‚ÇÅ ‚¶Ñ
    ‚Üí --------------------------
    Transitive (Œª x y ‚Üí R‚ÇÄ x y ‚àß R‚ÇÅ x y)

refl ‚¶É Reflexive‚àß ‚¶Ñ x = refl x , refl x
sym ‚¶É Symmetric‚àß ‚¶Ñ (p , q) = sym p , sym q
trans ‚¶É Transitive‚àß ‚¶Ñ (p , q) (p' , q') = trans p p' , trans q q'
